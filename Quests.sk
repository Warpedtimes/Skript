
#Takes quest data and sets it for the day
function setQuest(id: number, questID: number, name: text, action: text, actionNum: number, actionEvent: text, money: number, crowns: number):
	set {Quest.%{_id}%.questID} to {_questID}
	set {Quest.%{_id}%.name} to {_name}
	set {Quest.%{_id}%.action} to {_action}
	set {Quest.%{_id}%.actionNum} to {_actionNum}
	set {Quest.%{_id}%.actionEvent} to {_actionEvent}
	set {Quest.%{_id}%.money} to {_money}
	set {Quest.%{_id}%.crowns} to {_crowns}

command questing:
	trigger:
		set {Quests.nextDay} to now
		set {Quests.nextWeek} to now
		add 1 day to {Quests.nextDay}
		add 7 days to {Quests.nextWeek}
		questReselect()
		wait 10 ticks
		questsMenu(player)

command quests:
	aliases: q, quest
	trigger:
		questsMenu(player)


every 24 hours:
	set {time} to now
	add 1 day to {time}
	questReselect()

every 7 days:
	set {Quests.nextWeek} to now
	add 7 days to {Quests.nextWeek}
	questReselect()


function dailyQuestBegin(p: player, id: number):
	set {_questID} to {Quest.%{_id}%.questID}

	if {_questID} < 200:
		if {_questID} is 101:
			message "&aStarted Mining Quest" to {_p}
		
	else if {_questID} is 201:
		message "&aStarted Killing Quest" to {_p}

	else if {_questID} is 301:
		message "&aStarted Jumping Quest" to {_p}


	set {Quest.active.%{_id}%.%{_p}%} to true
	set {Quest.active.%{_id}%.%{_questID}%.%{_p}%} to true
	add {_p} to {Quest.users::*}

function questProgress(p: player, id: number):
	set {_questID} to {Quest.%{_id}%.questID}
	add 1 to {Quest.progress.%{_id}%.%{_p}%}
	if {Quest.progress.%{_id}%.%{_p}%} >= {Quest.%{_id}%.actionNum}:
		questCompleted({_p},{_id})

function questProgressValue(p: player, id: number, value: number):
	set {_questID} to {Quest.%{_id}%.questID}
	add {_value} to {Quest.progress.%{_id}%.%{_p}%}
	if {Quest.progress.%{_id}%.%{_p}%} >= {Quest.%{_id}%.actionNum}:
		questCompleted({_p},{_id})
		

function questCompleted(p: player, id: number):
	set {_questID} to {Quest.%{_id}%.questID}
	set {Quest.active.%{_id}%.%{_p}%} to false
	set {Quest.active.%{_id}%.%{_questID}%.%{_p}%} to false
	add {Quest.%{_id}%.money} to {_p}'s balance
	set {_uuid} to uuid of {_p}
	add {Quest.%{_id}%.crowns} to {crows::%{_uuid}%}
	add {_p} to {Quest.toBeReset::*}
	remove {_p} from {Quest.users::*}
	send title "&6Quest Completed" with subtitle "%{Quest.%{_id}%.name}%" to {_p}

function questReset():
	loop {Quest.users::*}:
		wait 1 tick

		set {Quest.active.1.%loop-value%} to false
		set {Quest.active.2.%loop-value%} to false
		set {Quest.active.3.%loop-value%} to false
		wait 1 tick

		set {_questID} to {Quest.1.questID}
		set {Quest.active.1.%{_questID}%.%loop-value%} to false

		set {_questID} to {Quest.2.questID}
		set {Quest.active.2.%{_questID}%.%loop-value%} to false

		set {_questID} to {Quest.3.questID}
		set {Quest.active.3.%{_questID}%.%loop-value%} to false

		remove loop-value from {Quest.users::*}

	loop {Quest.toBeReset::*}:
		wait 1 tick
		set {Quest.progress.1.%loop-value%} to 0
		set {Quest.progress.2.%loop-value%} to 0
		set {Quest.progress.3.%loop-value%} to 0

on join:
	if {Quest.active.1.%player%} is not set:
		set {Quest.active.1.%player%} to false
		set {Quest.active.2.%player%} to false
		set {Quest.active.3.%player%} to false
		set {Quest.progress.1.%player%} to 0
		set {Quest.progress.2.%player%} to 0
		set {Quest.progress.3.%player%} to 0
		set {Quest.progress.4.%player%} to 0
		set {Quest.progress.5.%player%} to 0
		set {Quest.progress.6.%player%} to 0


#QUEST LIST:


#Daily Quests
#Quest ID 1: Job Related Quests (exc Hunter). 101-200 (_random1)
#Quest ID 2: Hunting Related Quests. 201-300 		  (_random2)
#Quest ID 3: Misc Quests. 301-400 					  (_random3)

function questReselect():
	questReset()
	wait 3 ticks
	set {_random1} to a random integer between 1 and 3
	set {_random2} to a random integer between 1 and 9
	set {_random3} to a random integer between 1 and 6

	#Select Daily Quest 1


	#Mining Related 101-102
	if {_random1} = 1:

		set {_random1_mining} to a random integer between 1 and 2
		if {_random1_mining} = 1:
			setQuest(1,101,"&aMining Quest","mine",200,"ores",20,1)

		else if {_random1_mining} = 2:
			setQuest(1,102,"&aMining Quest","mine",200,"stone",20,1)

	#Farming Related 103-109
	else if {_random1} = 2:

		set {_random1_crops} to a random integer between 1 and 7
		if {_random1_crops} = 1:
			setQuest(1,103,"&aFarming Quest","harvest",200,"wheat",20,1)

		else if {_random1_crops} = 2:
			setQuest(1,104,"&aFarming Quest","harvest",200,"carrots",20,1)

		else if {_random1_crops} = 3:
			setQuest(1,105,"&aFarming Quest","harvest",200,"potatoes",20,1)

		else if {_random1_crops} = 4:
			setQuest(1,106,"&aFarming Quest","harvest",200,"beetroot",20,1)

		#Can be abused with spam placing. Since its growth cant be measured visually well Im commenting this out.
		#else if {_random1_crops} = 5:
			#setQuest(1,107,"&aFarming Quest","harvest",200,"sugar cane",20,1)

		else if {_random1_crops} = 6:
			setQuest(1,108,"&aFarming Quest","harvest",200,"coco beans",20,1)

		else if {_random1_crops} = 7:
			setQuest(1,109,"&aFarming Quest","harvest",200,"pumpkin & melon",20,1)

	#Woodcutting Related 110-116
	else if {_random1} = 3:

		set {_random1_wood} to a random integer between 1 and 6
		if {_random1_wood} = 1:
			setQuest(1,110,"&aWoodcutting Quest","chop",200,"oak logs",20,1)

		else if {_random1_wood} = 2:
			setQuest(1,111,"&aWoodcutting Quest","chop",200,"spruce logs",20,1)

		else if {_random1_wood} = 3:
			setQuest(1,112,"&aWoodcutting Quest","chop",200,"birch logs",20,1)

		else if {_random1_wood} = 4:
			setQuest(1,113,"&aWoodcutting Quest","chop",200,"jungle logs",20,1)

		else if {_random1_wood} = 5:
			setQuest(1,114,"&aWoodcutting Quest","chop",200,"acacia logs",20,1)

		else if {_random1_wood} = 6:
			setQuest(1,115,"&aWoodcutting Quest","chop",200,"dark oak logs",20,1)


	#Select Daily Quest 2
	#Killing related 201-209
	if {_random2} = 1:
		setQuest(2,201,"&cKilling Quest","kill",10,"players",20,1)

	else if {_random2} = 2:
		setQuest(2,202,"&cKilling Quest","kill",100,"livestock",20,1)

	else if {_random2} = 3:
		setQuest(2,203,"&cKilling Quest","kill",100,"zombies",20,1)

	else if {_random2} = 4:
		setQuest(2,204,"&cKilling Quest","kill",100,"skeletons",20,1)

	else if {_random2} = 5:
		setQuest(2,205,"&cKilling Quest","kill",100,"spiders",20,1)

	else if {_random2} = 6:
		setQuest(2,206,"&cKilling Quest","kill",100,"creepers",20,1)

	else if {_random2} = 7:
		setQuest(2,207,"&cKilling Quest","kill",100,"guardians",20,1)

	else if {_random2} = 8:
		setQuest(2,208,"&cKilling Quest","kill",100,"magma cubes",20,1)

	else if {_random2} = 9:
		setQuest(2,209,"&cKilling Quest","kill",100,"blazes",20,1)


	#Select Daily Quest 3
	#Misc quests 301-306

	if {_random3} = 1:
		setQuest(3,301,"&eJumping Quest","jump",300,"times",20,1)

	else if {_random3} = 2:
		setQuest(3,302,"&eCrafting Quest","craft",300,"times",20,1)

	else if {_random3} = 3:
		setQuest(3,303,"&eDeath Quest","die",10,"times",20,1)

	else if {_random3} = 4:
		setQuest(3,304,"&eDamage Quest","deal",1000,"damage",20,1)

	else if {_random3} = 5:
		setQuest(3,305,"&eEnchanting Quest","enchant",10,"times",20,1)

	else if {_random3} = 6:
		setQuest(3,306,"&eEating Quest","eat",30,"bread",20,1)


#WeeklyQuests
#Quest ID 4: Crate Quests. 101-200 							(_random4)
#Quest ID 5: Boss Killing Quest. 201-300 					(_random5)
#Quest ID 6: Huge Effort Quest (Lots of something). 301-400 (_random6)


	set {_random4} to a random integer between 1 and 3
	set {_random5} to a random integer between 1 and 3
	set {_random6} to a random integer between 1 and 3

	#Select Weekly Quest 1

	if {_random4} = 1:
		setQuest(4,401,"&3Crate Quest","open",3,"gold crates",40,5)

	else if {_random4} = 2:
		setQuest(4,402,"&3Crate Quest","open",2,"diamond crates",50,5)

	else if {_random4} = 3:
		setQuest(4,403,"&3Crate Quest","open",1,"emerald crate",60,10)


	#Select Weekly Quest 2

	if {_random5} = 1:
		setQuest(5,501,"&4Boss Slayer Quest","slay",1,"ender dragon",50,10)

	else if {_random5} = 2:
		setQuest(5,502,"&4Boss Slayer Quest","slay",3,"wither",50,10)

	else if {_random5} = 3:
		setQuest(5,503,"&4Boss Slayer Quest","slay",3,"elder guardians",50,10)


	#Select Weekly Quest 3

	if {_random6} = 1:
		setQuest(6,601,"&6Godly Quest","deliever",1,"divine scroll",50,10)

	else if {_random6} = 2:
		setQuest(6,502,"&6Holy Quest","deliever",5,"demon cores",50,10)

	else if {_random6} = 3:
		setQuest(6,503,"&6Cursed Quest","deliever",5,"angle cores",50,10)

#Quest Events

#Quest ID 1

on mine of any ore or ancient debris or stone or andesite or granite or diorite or blackstone:	
	if event-block is any ore or ancient debris:
		if {Quest.active.1.101.%player%} is true:
			questProgress(player,1)
	else:
		if {Quest.active.1.102.%player%} is true:
			questProgress(player,1)

on break:
	if event-block is fully grown wheat plant:
		if {Quest.active.1.103.%player%} is true:
			questProgress(player,1)

	else if event-block is fully grown carrot plant:
		if {Quest.active.1.104.%player%} is true:
			questProgress(player,1)

	else if event-block is fully grown potato plant:
		if {Quest.active.1.105.%player%} is true:
			questProgress(player,1)

	else if event-block is fully grown beetroot plant:
		if {Quest.active.1.106.%player%} is true:
			questProgress(player,1)

	else if event-block is ripe cocoa plant:
		if {Quest.active.1.108.%player%} is true:
			questProgress(player,1)

	else if event-block is melon or pumpkin:
		if {Quest.active.1.109.%player%} is true:
			questProgress(player,1)

on break:
	if event-block is oak log:
		if {Quest.active.1.110.%player%} is true:
			questProgress(player,1)

	else if event-block is spruce log:
		if {Quest.active.1.111.%player%} is true:
			questProgress(player,1)

	else if event-block is birch log:
		if {Quest.active.1.112.%player%} is true:
			questProgress(player,1)

	else if event-block is jungle log:
		if {Quest.active.1.113.%player%} is true:
			questProgress(player,1)

	else if event-block is acacia log:
		if {Quest.active.1.114.%player%} is true:
			questProgress(player,1)

	else if event-block is dark oak log:
		if {Quest.active.1.115.%player%} is true:
			questProgress(player,1)

#Quest ID 2
on death:
	if victim is player:
		if attacker != victim:
			if {Quest.active.2.201.%attacker%} is true:
				questProgress(attacker,2)

	else if victim is cow or sheep or chicken or pig or rabbit:
		if {Quest.active.2.202.%attacker%} is true:
			questProgress(attacker,2)

	else if victim is zombie or drowned or husk:
		if {Quest.active.2.203.%attacker%} is true:
			questProgress(attacker,2)

	else if victim is skeleton or stray or wither skeleton:
		if {Quest.active.2.204.%attacker%} is true:
			questProgress(attacker,2)

	else if victim is spider or cave spider:
		if {Quest.active.2.205.%attacker%} is true:
			questProgress(attacker,2)
			
	else if victim is creeper:
		if {Quest.active.2.206.%attacker%} is true:
			questProgress(attacker,2)

	else if victim is guardian:
		if {Quest.active.2.207.%attacker%} is true:
			questProgress(attacker,2)
			
	else if victim is magma cube:
		if {Quest.active.2.208.%attacker%} is true:
			questProgress(attacker,2)

	else if victim is blaze:
		if {Quest.active.2.209.%attacker%} is true:
			questProgress(attacker,2)

#Quest ID 3
on jump:
	if {Quest.active.3.301.%player%} is true:
		questProgress(player,3)

on craft:
	if {Quest.active.3.302.%player%} is true:
		questProgress(player,3)

on death:
	if {Quest.active.3.303.%victim%} is true:
		questProgress(victim,3)

on damage:
	if {Quest.active.3.304.%attacker%} is true:
		questProgressValue(attacker,3,damage)

on enchant:
	if {Quest.active.3.305.%player%} is true:
		questProgress(player,3)

on consume of bread:
	if {Quest.active.3.306.%player%} is true:
		questProgress(player,3)


function questsMenu(p: player):
	set {_differenceDaily} to difference between {Quests.nextDay} and now
	set {_differenceWeekly} to difference between {Quests.nextWeek} and now
	wait 1 tick
	create a gui with id "quests" with virtual chest inventory with 1 rows named "                &8&nQuests":
		make gui slot 0 with lectern of power 1 named "&aQuests" with lore "&fADD LORE HERE" with nbt "{HideFlags:63}"

		make gui slot 3 with writable book of power 1 named "&2Daily Quests" with lore "&aHere you can view daily" and "&aquests and your progress." and "" and "&2&l| &fResets: &2%{_differenceDaily}%" and "" and "&2>> Click to browse quests!" with nbt "{HideFlags:63}":
			dailyQuestsMenu(player)

		make gui slot 5 with writable book of power 1 named "&5Weekly Quests" with lore "&dHere you can view weekly" and "&dquests and your progress." and "" and "&5&l| &fResets: &5%{_differenceWeekly}%" and "" and "&5>> Click to browse quests!" with nbt "{HideFlags:63}":
			weeklyQuestsMenu(player)

	open gui last gui to {_p}


function weeklyQuestsMenu(p: player):
	create a gui with virtual chest inventory with 4 rows named "         &8&nWeekly Quests":
		make gui slot 31 with barrier named "&cBack?":
			questsMenu({_p})

		#QUEST 4
		if {Quest.active.4.%{_p}%} is not true:
			if {Quest.progress.4.%{_p}%} < {Quest.4.actionNum}:
				make gui slot 11 with chest named {Quest.4.name} with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.4.action} in proper case% %{Quest.4.actionNum}% %{Quest.4.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.4.money}% Coins" and "&8- &fx%{Quest.4.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.4.%{_p}%}%/%{Quest.4.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.4.%{_p}%} < {Quest.4.actionNum}:
						if {Quest.active.4.%{_p}%} is not true:
							dailyQuestBegin({_p},1)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

			else:
				make gui slot 11 with chest of power 1 named "%{Quest.4.name}% &7(COMPLETED)" with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.4.action} in proper case% %{Quest.4.actionNum}% %{Quest.4.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.4.money}% Coins" and "&8- &fx%{Quest.4.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.4.%{_p}%}%/%{Quest.4.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.4.%{_p}%} < {Quest.4.actionNum}:
						if {Quest.active.4.%{_p}%} is not true:
							dailyQuestBegin({_p},1)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

		else if {Quest.active.4.%{_p}%} is true:
			make gui slot 11 with chest of power 1 named {Quest.4.name} with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.4.action} in proper case% %{Quest.4.actionNum}% %{Quest.4.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.4.money}% Coins" and "&8- &fx%{Quest.4.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.4.%{_p}%}%/%{Quest.4.actionNum}%" with nbt "{HideFlags:63}":
				if {Quest.progress.4.%{_p}%} < {Quest.4.actionNum}:
					if {Quest.active.4.%{_p}%} is not true:
						dailyQuestBegin({_p},1)
						dailyQuestsMenu(player)
					else:
						message "&cQuest Already Active"
				else:
					message "&cQuest Already Completeted"

		#QUEST 5
		if {Quest.active.5.%{_p}%} is not true:
			if {Quest.progress.5.%{_p}%} < {Quest.5.actionNum}:
				make gui slot 13 with end crystal named {Quest.5.name} with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.5.action} in proper case% %{Quest.5.actionNum}% %{Quest.5.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.5.money}% Coins" and "&8- &fx%{Quest.5.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.5.%{_p}%}%/%{Quest.5.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.5.%{_p}%} < {Quest.5.actionNum}:
						if {Quest.active.5.%{_p}%} is not true:
							dailyQuestBegin({_p},2)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"


			else:
				make gui slot 13 with end crystal of power 1 named "%{Quest.5.name}% &7(COMPLETED)" with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.5.action} in proper case% %{Quest.5.actionNum}% %{Quest.5.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.5.money}% Coins" and "&8- &fx%{Quest.5.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.5.%{_p}%}%/%{Quest.5.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.5.%{_p}%} < {Quest.5.actionNum}:
						if {Quest.active.5.%{_p}%} is not true:
							dailyQuestBegin({_p},2)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

		else if {Quest.active.5.%{_p}%} is true:
			make gui slot 13 with end crystal of power 1 named {Quest.5.name} with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.5.action} in proper case% %{Quest.5.actionNum}% %{Quest.5.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.5.money}% Coins" and "&8- &fx%{Quest.5.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.5.%{_p}%}%/%{Quest.5.actionNum}%" with nbt "{HideFlags:63}":
				if {Quest.progress.5.%{_p}%} < {Quest.5.actionNum}:
					if {Quest.active.5.%{_p}%} is not true:
						dailyQuestBegin({_p},2)
						dailyQuestsMenu(player)
					else:
						message "&cQuest Already Active"
				else:
					message "&cQuest Already Completeted"


		#QUEST 6
		if {Quest.active.6.%{_p}%} is not true:
			if {Quest.progress.6.%{_p}%} < {Quest.6.actionNum}:
				make gui slot 15 with enchanted golden apple named {Quest.6.name} with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.6.action} in proper case% %{Quest.6.actionNum}% %{Quest.6.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.6.money}% Coins" and "&8- &fx%{Quest.6.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.6.%{_p}%}%/%{Quest.6.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.6.%{_p}%} < {Quest.6.actionNum}:
						if {Quest.active.6.%{_p}%} is not true:
							dailyQuestBegin({_p},3)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

			else:
				make gui slot 15 with enchanted golden apple of power 1 named "%{Quest.6.name}% &7(COMPLETED)" with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.6.action} in proper case% %{Quest.6.actionNum}% %{Quest.6.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.6.money}% Coins" and "&8- &fx%{Quest.6.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.6.%{_p}%}%/%{Quest.6.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.6.%{_p}%} < {Quest.6.actionNum}:
						if {Quest.active.6.%{_p}%} is not true:
							dailyQuestBegin({_p},3)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"


		else if {Quest.active.6.%{_p}%} is true:
			make gui slot 15 with enchanted golden apple of power 1 named "%{Quest.6.name}%" with lore "&8Weekly Quest" and "" and "&6Task:" and "&8- &f%{Quest.6.action} in proper case% %{Quest.6.actionNum}% %{Quest.6.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.6.money}% Coins" and "&8- &fx%{Quest.6.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.6.%{_p}%}%/%{Quest.6.actionNum}%" with nbt "{HideFlags:63}":
				if {Quest.progress.6.%{_p}%} < {Quest.6.actionNum}:
					if {Quest.active.6.%{_p}%} is not true:
						dailyQuestBegin({_p},3)
						dailyQuestsMenu(player)
					else:
						message "&cQuest Already Active"
				else:
					message "&cQuest Already Completeted"

	open gui last gui to {_p}


function dailyQuestsMenu(p: player):
	create a gui with virtual chest inventory with 4 rows named "          &8&nDaily Quests":

		#QUEST 1
		if {Quest.active.1.%{_p}%} is not true:
			if {Quest.progress.1.%{_p}%} < {Quest.1.actionNum}:
				make gui slot 11 with thing banner pattern named {Quest.1.name} with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.1.action} in proper case% %{Quest.1.actionNum}% %{Quest.1.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.1.money}% Coins" and "&8- &fx%{Quest.1.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.1.%{_p}%}%/%{Quest.1.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.1.%{_p}%} < {Quest.1.actionNum}:
						if {Quest.active.1.%{_p}%} is not true:
							dailyQuestBegin({_p},1)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

			else:
				make gui slot 11 with thing banner pattern of power 1 named "%{Quest.1.name}% &7(COMPLETED)" with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.1.action} in proper case% %{Quest.1.actionNum}% %{Quest.1.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.1.money}% Coins" and "&8- &fx%{Quest.1.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.1.%{_p}%}%/%{Quest.1.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.1.%{_p}%} < {Quest.1.actionNum}:
						if {Quest.active.1.%{_p}%} is not true:
							dailyQuestBegin({_p},1)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

		else if {Quest.active.1.%{_p}%} is true:
			make gui slot 11 with thing banner pattern of power 1 named {Quest.1.name} with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.1.action} in proper case% %{Quest.1.actionNum}% %{Quest.1.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.1.money}% Coins" and "&8- &fx%{Quest.1.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.1.%{_p}%}%/%{Quest.1.actionNum}%" with nbt "{HideFlags:63}":
				if {Quest.progress.1.%{_p}%} < {Quest.1.actionNum}:
					if {Quest.active.1.%{_p}%} is not true:
						dailyQuestBegin({_p},1)
						dailyQuestsMenu(player)
					else:
						message "&cQuest Already Active"
				else:
					message "&cQuest Already Completeted"

		#QUEST 2
		if {Quest.active.2.%{_p}%} is not true:
			if {Quest.progress.2.%{_p}%} < {Quest.2.actionNum}:
				make gui slot 13 with thing banner pattern named {Quest.2.name} with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.2.action} in proper case% %{Quest.2.actionNum}% %{Quest.2.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.2.money}% Coins" and "&8- &fx%{Quest.2.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.2.%{_p}%}%/%{Quest.2.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.2.%{_p}%} < {Quest.2.actionNum}:
						if {Quest.active.2.%{_p}%} is not true:
							dailyQuestBegin({_p},2)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"


			else:
				make gui slot 13 with thing banner pattern of power 1 named "%{Quest.2.name}% &7(COMPLETED)" with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.2.action} in proper case% %{Quest.2.actionNum}% %{Quest.2.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.2.money}% Coins" and "&8- &fx%{Quest.2.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.2.%{_p}%}%/%{Quest.2.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.2.%{_p}%} < {Quest.2.actionNum}:
						if {Quest.active.2.%{_p}%} is not true:
							dailyQuestBegin({_p},2)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

		else if {Quest.active.2.%{_p}%} is true:
			make gui slot 13 with thing banner pattern of power 1 named {Quest.2.name} with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.2.action} in proper case% %{Quest.2.actionNum}% %{Quest.2.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.2.money}% Coins" and "&8- &fx%{Quest.2.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.2.%{_p}%}%/%{Quest.2.actionNum}%" with nbt "{HideFlags:63}":
				if {Quest.progress.2.%{_p}%} < {Quest.2.actionNum}:
					if {Quest.active.2.%{_p}%} is not true:
						dailyQuestBegin({_p},2)
						dailyQuestsMenu(player)
					else:
						message "&cQuest Already Active"
				else:
					message "&cQuest Already Completeted"


		#QUEST 3
		if {Quest.active.3.%{_p}%} is not true:
			if {Quest.progress.3.%{_p}%} < {Quest.3.actionNum}:
				make gui slot 15 with thing banner pattern named {Quest.3.name} with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.3.action} in proper case% %{Quest.3.actionNum}% %{Quest.3.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.3.money}% Coins" and "&8- &fx%{Quest.3.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.3.%{_p}%}%/%{Quest.3.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.3.%{_p}%} < {Quest.3.actionNum}:
						if {Quest.active.3.%{_p}%} is not true:
							dailyQuestBegin({_p},3)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"

			else:
				make gui slot 15 with thing banner pattern of power 1 named "%{Quest.3.name}% &7(COMPLETED)" with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.3.action} in proper case% %{Quest.3.actionNum}% %{Quest.3.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.3.money}% Coins" and "&8- &fx%{Quest.3.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.3.%{_p}%}%/%{Quest.3.actionNum}%" with nbt "{HideFlags:63}":
					if {Quest.progress.3.%{_p}%} < {Quest.3.actionNum}:
						if {Quest.active.3.%{_p}%} is not true:
							dailyQuestBegin({_p},3)
							dailyQuestsMenu(player)
						else:
							message "&cQuest Already Active"
					else:
						message "&cQuest Already Completeted"


		else if {Quest.active.3.%{_p}%} is true:
			make gui slot 15 with thing banner pattern of power 1 named "%{Quest.3.name}%" with lore "&8Daily Quest" and "" and "&6Task:" and "&8- &f%{Quest.3.action} in proper case% %{Quest.3.actionNum}% %{Quest.3.actionEvent} in proper case% " and "" and "&6Reward:" and "&8- &f$%{Quest.3.money}% Coins" and "&8- &fx%{Quest.3.crowns}% Crowns" and "" and "&7Progress: &f%{Quest.progress.3.%{_p}%}%/%{Quest.3.actionNum}%" with nbt "{HideFlags:63}":
				if {Quest.progress.3.%{_p}%} < {Quest.3.actionNum}:
					if {Quest.active.3.%{_p}%} is not true:
						dailyQuestBegin({_p},3)
						dailyQuestsMenu(player)
					else:
						message "&cQuest Already Active"
				else:
					message "&cQuest Already Completeted"

		make gui slot 31 with barrier named "&cBack?":
			questsMenu({_p})

	open gui last gui to {_p}






